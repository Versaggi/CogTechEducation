##!
# @file

### README ##########################################################################
# This file creates the directed graph of the Prediabeted POC Omaha Taxonomy 
# Semantic Memory elements we wish to populate the SOAR agent with. This is 
# limited to just the Omaha Signs & Symptoms, Omaha Problems and their Priority in
# the reasoning process.
#
# At the end of the file are example Operators that illustrate how to query the 
# SOAR SMem Module and ask it for the root of this structure. It also provides
# examples of how to access any arbitrary part of that structure when needed. 
# 
#####################################################################################


######
# AUTHOR: Matthew Versaggi
# MENTOR: Bryan Sterns
# DATE:   Jan-11th, 2021
#
#
#         COMMANDS
# 
# smem - enable
# smem - add
#
##        OPERATORS
# 
# (query-root) +
# (collect-root) +
#
#         DESIRED STATE
#
# goal-achieved
#
##        WM STRUCTURES
#  ( <ts> ^name <name>                                                 # The name of the state
#
#  ( <ts> ^name root                                                   # The root of the Omaha Taxonomy SMem Graph
#               ^root.omahasignsymptom.omahaproblem.prioritization"    # Complete Edge traversal for the SMem Graph
#                  ^omahasignsymptom <oss>                             # Edge: Omaha Signs & Symptoms
#                            ^name <name>                              # Node: Omaha Signs & Symptoms - name
#                            ^code <code>                              # Node: Omaha Signs & Symptoms - code
#                      ^omahaproblem <opbm>                            # Edge: Omaha Problem
#                             ^name <name>                             # Node: Omaha Problem - name
#                          ^prioritization <prioritization>            # Edge: Omaha Prioritization
#                              ^name <name>                            # Node: Omaha Prioritization - name
#                              ^priority <pri_value>                   # Node: Omaha Prioritization - value
# 
#          ^smem.command <scmd>                                        # SOAR SMem command link
#                   ^result.retrieved <lti>                            # SOAR SMem Query Retrieved link
#                   ^result.success <cue>                              # SOAR SMem Successful Result Flag
#                   ^query <q>                                         # SOAR SMem Query command
#                   ^depth <d>                                         # SOAR SMem Graph Depth Flag
#          ^current-item <lti>                                         # The Current Item returned from SMem (eg. Root Object)
#
# SMem Retrieved State Graph:
#
# COMPLETE GRAPH EDGES:
# "^root.omahasignsymptom.omahaproblem.prioritization"
#
# NODES: 'omahasignsymptom'
# "^root.omahasignsymptom.name"
# "^root.omahasignsymptom.code"
#
# NODE: 'omahaproblem'
# "^root.omahasignsymptom.omahaproblem.name"
#
# Nodes: 'prioritization'
# "^root.omahasignsymptom.omahaproblem.prioritization.name"
# "^root.omahasignsymptom.omahaproblem.prioritization.priority"
#
######

###
### Preload into Semantic Memory the Omaha Prediabetes taxonomy of interest to the POC
###

### Nothing happems with Semantic Memory until the service is enabled
### Enable Semantic Memory
smem --enable

### Load the Omaha Prediabetes taxonomy into Semantic Memory
#
# This block of code continues until the comment tag below:
# 'END Omaha POC SMem Population'
#

smem --add {

# BEGIN Omaha POC SMem Population

###
### Top Object(s)
###

## ROOT 
# This is the top of the directed graph being created that will reside in SOAR's Semantic Memory
# This will make it easy to grab the entire structure when needed.
#
(<root> ^name root)

## PHYSICAL 
#
(<physical> ^name physical ^priority 1)
(<circulation> ^name circulation ^prioritization <physical>)
(<urinaryfunction> ^name urinaryfunction ^prioritization <physical>)
(<neuromusculoskeletal> ^name neuromusculoskeletal ^prioritization <physical>)
(<skin> ^name skin ^prioritization <physical>)
(<reproductivefunction> ^name reproductivefunction ^prioritization <physical>)
(<pregnancy> ^name pregnancy ^prioritization <physical>)
(<oralhealth> ^name oralhealth ^prioritization <physical>)

## EMOTIONAL
#
(<emotional> ^name emotional ^priority 2)
(<mentalhealth> ^name mentalhealth ^prioritization <emotional>)
(<physicalactivity> ^name physicalactivity ^prioritization <emotional>)
(<sleeprestpatterns> ^name sleeprestpatterns ^prioritization <emotional>)
(<nutrition> ^name nutrition ^prioritization <emotional>)

## SOCIAL
#
(<social> ^name social ^priority 3)
(<socialcontact> ^name socialcontact ^prioritization <social>)
(<income> ^name income ^prioritization <social>)
(<educationalbarrior> ^name educationalbarrior ^prioritization <social>)
(<culturalbarrier> ^name culturalbarrier ^prioritization <social>)

## RISK
#
(<risk> ^name risk ^priority 4)
(<race> ^name race ^prioritization <risk>)
(<genetics> ^name race ^prioritization <risk>)
(<pregnancygdm> ^name pregnancygdm ^prioritization <risk>)
(<reproductivefn> ^name reproductivefn ^prioritization <risk>)



#####
##### PRIORITY #1: PHYSICAL
#####


## PROBLEM: CIRCULATION

# Abnormal Blood Pressure Reading
(<root> ^omahasignsymptom <abpr>)
(<abpr> ^code abpr ^name |Abnormal Blood Pressure Reading| ^omahaproblem <circulation>)

# Discoloration of Skin/Cyanosis
(<root> ^omahasignsymptom  <dsc>)
(<dsc> ^code dsc ^name |Discoloration of Skin/Cyanosis| ^omahaproblem <circulation>)

# Temperature Change in Affected Area
(<root> ^omahasignsymptom <tcaa>)
(<tcaa> ^code tcaa ^name |Temperature Change in Affected Area| ^omahaproblem <circulation>)


## PROBLEM: PREGNANCY

# Prenatal Complications/Preterm Labor
(<root> ^omahasignsymptom <pncpl>)
(<pncpl> ^code pncpl ^name |Prenatal Complications/Preterm Labor| ^omahaproblem <pregnancy>)


## PROBLEM: URINARY FUNCTION

# Prenatal Complications/Preterm Labor
(<root> ^omahasignsymptom  <ufu>)
(<ufu> ^code ufu ^name |Urgency/Frequency (Urination)| ^omahaproblem <urinaryfunction>)


## PROBLEM: NEURO-MUSCULO-SKELETAL FUNCTION

# Decreased Sensation
(<root> ^omahasignsymptom <ds>)
(<ds> ^code ds ^name |Decreased Sensation| ^omahaproblem <neuromusculoskeletal>)


## PROBLEM: SKIN

# Excessively Dry
(<root> ^omahasignsymptom <eds>)
(<eds> ^code eds ^name |Excessively Dry| ^omahaproblem <skin>)

# Lesion/Pressure Ulcer
(<root> ^omahasignsymptom <lpu>)
(<lpu> ^code lpu ^name |Excessively Dry| ^omahaproblem <skin>)


## PROBLEM: REPRODUCTIVE FUNCTION

# Impotency
(<root> ^omahasignsymptom <imp>)
(<imp> ^code imp ^name |Impotency| ^omahaproblem <reproductivefunction>)


## PROBLEM: ORAL HEALTH

# Cracked Lips/Dry Mouth
(<root> ^omahasignsymptom <cldm>)
(<cldm> ^code cldm ^name |Cracked Lips/Dry Mouth| ^omahaproblem <oralhealth>)



#####
##### PRIORITY #2: EMOTIONAL 
#####


## PROBLEM: MENTAL HEALTH

# Apprehension/Undefined Fear
(<root> ^omahasignsymptom <auf>)
(<auf> ^code auf ^name |Apprehension/Undefined Fear| ^omahaproblem <mentalhealth>)

# Sadness/Hopelessness/Decreases Self-Esteem
(<root> ^omahasignsymptom <shdse>)
(<shdse> ^code shdse ^name |Sadness/Hopelessness/Decreases Self-Esteem| ^omahaproblem <mentalhealth>)

# Somatic Complaints/Fatigue
(<root> ^omahasignsymptom <scf>)
(<scf> ^code scf ^name |Somatic Complaints/Fatigue| ^omahaproblem <mentalhealth>)


## PROBLEM: Physical Activity

# Sedentary Life Style
(<root> ^omahasignsymptom <sls>)
(<sls> ^code sls ^name |Sedentary Life Style| ^omahaproblem <physicalactivity>)


## PROBLEM: SLEEP AND REST PATTERNS

# Insufficient Sleep/Rest for Age/Physical Condition
(<root> ^omahasignsymptom <israpc>)
(<israpc> ^code israpc ^name |Insufficient Sleep/Rest for Age/Physical Condition| ^omahaproblem <sleeprestpatterns>)

# Sleep Apnea
(<root> ^omahasignsymptom <sa>)
(<sa> ^code sa ^name |Sleep Apnea| ^omahaproblem <sleeprestpatterns>)


## PROBLEM: NUTRITION

# Does Not Follow Recommended Nutrition Plan
(<root> ^omahasignsymptom <dnfnp>)
(<dnfnp> ^code dnfnp ^name |Does Not Follow Recommended Nutrition Plan| ^omahaproblem <nutrition>)

# Overweight: Adult BMI 25.0 or More; Child BMI 95th Percentiles or More
(<root> ^omahasignsymptom <owac>)
(<owac> ^code owac ^name |Overweight: Adult BMI 25.0 or More; Child BMI 95th Percentiles or More| ^omahaproblem <nutrition>)

# Unexplained/Progressive Weight Loss
(<root> ^omahasignsymptom <upwl>)
(<upwl> ^code upwl ^name |Unexplained/Progressive Weight Loss| ^omahaproblem <nutrition>)



#####
##### PRIORITY #3: SOCIAL 
#####

## PROBLEM: SOCIAL CONTACT

# Limited Social Contact
(<root> ^omahasignsymptom <lsc>)
(<lsc> ^code lsc ^name |Limited Social Contact| ^omahaproblem <socialcontact>)


## PROBLEM: INCOME

# Low/No Income
(<root> ^omahasignsymptom <lni>)
(<lni> ^code lni ^name |Low/No Income| ^omahaproblem <income>)


## PROBLEM: COMMUNICATION WITH COMMUNITY RESOURCES

# Educational Barrier
(<root> ^omahasignsymptom <edb>)
(<edb> ^code edb ^name |Educational Barrier| ^omahaproblem <educationalbarrior>)

# Cultural Barrier
(<root> ^omahasignsymptom <cb>)
(<cb> ^code cb ^name |Cultural Barrier| ^omahaproblem <culturalbarrier>)




#####
##### PRIORITY #4: RISK 
#####


## PROBLEM: HEALTH CARE SUPERVISION

# Race: Ethnicity Identified Known Risk Group
(<root> ^omahasignsymptom <reig>)
(<reig> ^code reig ^name |Ethnicity Identified Known Risk Group| ^omahaproblem <race>)


# GENETICS: Family History Diabetes
(<root> ^omahasignsymptom <gen>)
(<gen> ^code reig ^name |Family History Diabetes| ^omahaproblem <genetics>)


# GDM: Pregnancy - Gestational Diabetes Mellitus
(<root> ^omahasignsymptom <gdm>)
(<gdm> ^code gdm ^name |Gestational Diabetes Mellitus| ^omahaproblem <pregnancygdm>)


# GDM: Polycystic Ovary Syndrome
(<root> ^omahasignsymptom <pcos>)
(<pcos> ^code pcos ^name |Polycystic Ovary Syndrome| ^omahaproblem <reproductivefn>)


# END Omaha POC SMem Population
}




###
### OPERATOR: QUERY-ROOT
###

# Use an 'query' command to get the first item called 'root' in the Semantic Memory directed graph 
# Print out via debugger using the 'visualize smem' and 'visualize wm' commands.
# The "Apply" rule creates "^smem.command.query.name" in WM.
#
# This is a conversation w/the SOAR SMEM module of the type: "Can you search for and smem object with the name
# "root", and respond during the 'next' decision cycle by putting the root object on the SOAR 'results structure'?"
#
# Note: Tribal Knowledge - the Graph Structure is 4 levels deep so the flag "^depth 4" is used to get the entire
#       structure out of SMem and put it into WM for computation. 
#
###

sp {propose*query-root
    "Match expected Initial State on WM w/absence of any ^name attribute
     and then place a operator in WM w/the name query-root."
    (state <s> ^superstate nil
            -^name)
-->
    (<s> ^operator <o> +)
    (<o> ^name query-root)
}


sp {apply*query-root
    "Grab the reference of ^smem.command so that it can be used on RHS of rule. 
     make SOAR query to a depth of 4 levels for a SMem Element with the name of root."
    (state <s> ^operator.name query-root
                ^smem.command <scmd>)
-->
    (<s> ^name smem-example)
    (<scmd> ^query <q> ^depth 4)
    (<q> ^name root)
    (write (crlf)(crlf)  |Querying SMem for the Root Node!| (crlf) (crlf) )
}



###
### OPERATOR: COLLECT-ROOT
###

# Fetch item from the SOAR 'results' structure, place the query result onto the 
# "topstate (S1)" and then remove the query command to clean up.
#
# When the Architecture finds something for the query, it communicates success via "^smem.result.success".
#
# "^current-item" - use this to access the 'root' object of the SMem directed graph of interest that has been 
# placed into WM.
#
###

sp {propose*collect-root
    "If there is a successful result returned, and no current-item yet, it must be the initial query result,
     so put the operator connect-root into WM."
    (state <s> ^name smem-example
            ^smem.result.success <cue>
            -^current-item)
-->
    (<s> ^operator <o> +)
    (<o> ^name collect-root)
}


sp {apply*collect-root
    "Collect the query result and remove the query command to free up the SMem link.
     ^current-item now holds a reference to the root object."
    (state <s> ^operator.name collect-root
        ^smem <smem>)
    (<smem> ^command <scmd>
            ^result.retrieved <lti>)
    (<scmd> ^query <q>)
    (<lti> ^name <name>)
-->
    (<s> ^current-item <lti>)
    (<scmd> ^query <q> -)
    (write (crlf)(crlf) |Collected Root Node: | <name> (crlf)(crlf))
}



###
### Desired State: Omaha Sign/Symptom 
###

# This rule is an example of how *ANY* part of the graph put into SMem can be retrieved
# into WM and examined. The key is knowing the graph structure and following the edges
# to the nodes of interest. Below are those for this graph structure.
# 
# EXAMPLE: The Omaha Signs/Symptoms = 'Impotency'
#          The Omaha Problem = 'reproductivefunction'
#          The Prioritization = 'physical', priority = 1.
#          
# SMem Retrieved State Graph:
#
# COMPLETE GRAPH EDGES:
# "^root.omahasignsymptom.omahaproblem.prioritization"
#
# NODES: 'omahasignsymptom'
# "^root.omahasignsymptom.name"
# "^root.omahasignsymptom.code"
#
# NODE: 'omahaproblem'
# "^root.omahasignsymptom.omahaproblem.name"
#
# Nodes: 'prioritization'
# "^root.omahasignsymptom.omahaproblem.prioritization.name"
# "^root.omahasignsymptom.omahaproblem.prioritization.priority"


sp {detect*goal-achieved
    "The rule below uses string objects and variables to search for specific edges in the graph,
     once it find something it binds it to the respective variables for use in the RHS of the rule."
   (state <s> ^name smem-example ^current-item <root>)
   (<root> ^omahasignsymptom <oss>)                       # Edge: 'omahasignsymptom'
   (<oss> ^name |Impotency|)                              # Node: 'name'
   (<oss> ^name <oss_name>)
   (<oss> ^omahaproblem <opbm>)                           # Edge: 'omahaproblem' 
   (<opbm> ^name |reproductivefunction|)                  # Node: 'name'
   (<opbm> ^name <opbm_name>)
   (<opbm> ^prioritization <prioritization>)              # Edge: 'prioritization'
   (<prioritization> ^name |physical|)                    # Node: 'name'
   (<prioritization> ^name <pri_name>)                    # Edge: 'prioritization'
   (<prioritization> ^priority 1)                         # Node: 'value'
   (<prioritization> ^priority <pri_value>)
-->

   (write (crlf) |The Correct Node has been retrieved from Semantic Memory: |)
   (write (crlf) |Omaha Sign & Symptom: | <oss_name> )
   (write (crlf) |Omaha Problem: | <opbm_name> )
   (write (crlf) |Omaha Priority Name: | <pri_name>)
   (write (crlf) |Omaha Priority Value: | <pri_value>)
   (halt)
   }












